# The location of the MCUd directory.
MCUD ?= mcud

# The directory containing the application sources.
APP_SRC ?= src

# The directory which will containg compiled binaries.
BIN_DIR ?= bin

# The source directory of MCUd.
MCUD_SRC = $(MCUD)/mcud

# The directory containing the sources for the standard library.
LIBD_SRC = $(MCUD)/libd

# The output ELF file.
ELF_FILE = $(BIN_DIR)/application.elf

# The output ELF file for unit testing.
ELF_TEST_FILE = $(BIN_DIR)/test.elf

# The output BIN file.
BIN_FILE = $(ELF_FILE:%.elf=%.bin)

# The output object file.
OBJ_FILE = $(BIN_DIR)/application.o

# The linker script to use.
LINKER_SCRIPT = $(MCUD_SRC)/cpu/$(CPU)/linker.ld

# The directory containing board support definitions.
BOARD_SRC := $(wildcard boards/$(BOARD))
ifeq ($(BOARD_SRC),)
BOARD_SRC := $(wildcard $(MCUD_SRC)/boards/$(BOARD))
endif
ifeq ($(BOARD_SRC),)
$(error Could not find the board '$(BOARD)')
endif

# Include the makefile from the BSP.
include $(BOARD_SRC)/Makefile.include

# Find all the sources to build.
TESTSOURCES += $(shell find $(BOARD_SRC) -type f -iname "*.d")
TESTSOURCES += $(shell find $(APP_SRC) -type f -iname "*.d")
TESTSOURCES += $(shell find $(MCUD_SRC)/cpu/$(CPU) -type f -iname "*.d")
TESTSOURCES += $(shell find $(MCUD_SRC)/core -type f -iname "*.d")
TESTSOURCES := $(TESTSOURCES)

SOURCES += $(shell find $(LIBD_SRC) -type f -iname "*.d")
SOURCES := $(TESTSOURCES) $(SOURCES)

# The target to build for.
TARGET = arm-none-eabi-
# The host D compiler to use.
HOSTDC = gdc
# The D compiler to use.
DC = $(TARGET)gdc
# The linker to use.
LD = $(TARGET)ld
# Flags to pass to the D compiler.
DFLAGS = -nostdlib -Os -ggdb -ffunction-sections -fdata-sections -mcpu=cortex-m4 -mthumb -fno-moduleinfo
# Flags to pass to the compiler when building tests.
HOSTDFLAGS = -funittest -fmain -ggdb
# The tool to strip binaries with.
STRIP = $(TARGET)strip
# The tool to copy object files with.
OBJCOPY = $(TARGET)objcopy

.PHONY: all
all: $(ELF_FILE)
	arm-none-eabi-size $(ELF_FILE)

.PHONY: test
test: $(ELF_TEST_FILE)
	$(ELF_TEST_FILE)

.PHONY: info
info:
	@echo "Sources: $(SOURCES)"
	@echo "App sources: $(APP_SRC)"
	@echo "D4MCU sources: $(MCUD_SRC)"
	@echo "Binaries: $(BIN_DIR)"

.PHONY: clean
clean:
	rm -rf $(BIN_DIR)

.PHONY: flash
flash: $(BIN_FILE)
	st-flash write $< 0x08000000

$(BIN_FILE): $(ELF_FILE)
	$(OBJCOPY) -O binary $< $@

$(ELF_FILE): $(OBJ_FILE) $(LINKER_SCRIPT)
	@mkdir -p $(dir $@)
	$(LD) -T $(LINKER_SCRIPT) --gc-sections -o $@ $<

$(OBJ_FILE): $(SOURCES) $(MCUD)/Makefile.include $(LINKER_SCRIPT)
	@mkdir -p $(dir $@)
	$(DC) $(DFLAGS) -c -o $@ $(SOURCES)

$(ELF_TEST_FILE): $(TESTSOURCES) $(MCUD)/Makefile.include
	mkdir -p $(dir $@)
	$(HOSTDC) $(HOSTDFLAGS) -o $@ $(TESTSOURCES)